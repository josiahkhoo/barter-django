# Generated by Django 3.0.2 on 2020-06-06 17:31

from django.db import migrations, models
import django.utils.timezone
import django_countries.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('username', models.CharField(max_length=15, unique=True, verbose_name='username')),
                ('datetime_created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='datetime created')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('date_of_birth', models.DateTimeField(blank=True, null=True, verbose_name='date of birth')),
                ('country', django_countries.fields.CountryField(blank=True, max_length=2, null=True)),
                ('bio', models.CharField(blank=True, max_length=180, null=True, verbose_name='bio')),
                ('status', models.IntegerField(choices=[(0, 'UNVERIFIED'), (1, 'VERIFIED'), (2, 'DEACTIVATED'), (3, 'BANNED')], default=0)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('datetime_last_logout', models.DateTimeField(default=django.utils.timezone.now, verbose_name='datetime last logout')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
